{"version":3,"sources":["/Users/chowki/projects/react-games/src/games/puzzle-2048/components/header/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/components/grid/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/components/grid-cell/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/_base.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/components/grid-row/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/components/tile/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/components/tile-container/styles.scss","/Users/chowki/projects/react-games/src/games/puzzle-2048/styles.scss","/Users/chowki/projects/react-games/src/games/concentration/components/flip-card/styles.scss","/Users/chowki/projects/react-games/src/games/concentration/components/loader/styles.scss"],"names":[],"mappings":"AAAA,QACE,YAAA,CACA,6BAA8B,CAFhC,0BAKI,gBAAiB,CCLrB,MACE,iBAAA,CACA,SAAU,CCAZ,WACE,cAAA,CACA,eAAA,CACA,iBAAA,CACA,UAAA,CAEA,iBAAA,CAEA,eCOqB,CDfvB,sBAWI,cAAe,CEXnB,UACE,kBDFiB,CCCnB,qBAII,eAAgB,CAJpB,gBAQI,UAAA,CACA,aAAA,CACA,UAAW,CCKT,mBAGE,sBAAkC,CAHpC,mBAGE,2BAAkC,CAHpC,mBAGE,2BAAkC,CAHpC,mBAGE,2BAAkC,CAHpC,mBAGE,0BAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,0BAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,0BAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAHpC,mBAGE,gCAAkC,CAUtC,sBAEI,kBALY,CAGhB,sBAEI,kBALuB,CAG3B,sBAEI,iBAL+B,CAGnC,uBAEI,kBALyC,CAG7C,uBAEI,eAL+C,CAGnD,uBAEI,kBALwD,CAG5D,wBAEI,eALwE,CAG5E,wBAEI,kBALmF,CAGvF,wBAEI,kBALkG,CAGtG,yBAEI,kBAL2G,CAG/G,yBAEI,eALkH,CAc1H,MACE,iBAG6B,CAG/B,oBALE,WAAA,CACA,YAAA,CACA,iBAec,CAZhB,cAIE,iBAAA,CAEA,UAAA,CACA,uCAAA,CACA,iBAAA,CACA,eAAA,CAEA,UAAA,CACA,aAAc,CC5DhB,gBACE,iBAAA,CACA,SAAU,CCAZ,gBACE,eAAA,CACA,iBAAA,CACA,YAAA,CAEA,cAAA,CACA,wBAAA,CAAA,oBAAA,CAAA,gBAAA,CACA,iBAAA,CAEA,eAAA,CACA,iBAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAsB,CCbxB,UACE,iBAAA,CACA,oBAAA,CACA,WAAA,CACA,YAAA,CACA,cAAe,CALjB,0BAQI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CAEA,4BAAA,CACA,iBAAA,CACA,+DAAA,CAEA,kCAAA,CAAA,0BAAA,CACA,wBAAA,CACA,2BAA4B,CApBhC,iBA0BI,0BAAA,CACA,YAAA,CACA,sBAAuB,CA5B3B,qBA+BM,SAAU,CA/BhB,gBAqCI,iBAAA,CACA,qBAAuB,CAtC3B,wBA4CM,yBAA0B,CA5ChC,yBAgDM,uBAAwB,CAhD9B,gBAqDI,UAAY,CClDhB,kBACE,YAAA,CACA,qBAAsB,CAFxB,0BAKI,UAAA,CACA,WAAA,CACA,oBAAA,CACA,gBAAA,CACA,qBAAA,CACA,iBAAkB,CAVtB,gCAaM,UAAA,CACA,iBAAA,CACA,QAAA,CACA,SAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CAEA,4BAAA,CAAA,qBAAA,CACA,yCAAA,CAAA,iCAAkC,CAtBxC,2BA2BI,aAAc,CAIlB,wBACE,GACE,sBAAuB,CAEzB,GACE,uBAAyB,CAAA,CAL7B,gBACE,GACE,sBAAuB,CAEzB,GACE,uBAAyB,CAAA","file":"main.71af1d27.chunk.css","sourcesContent":[".header {\n  display: flex;\n  justify-content: space-between;\n\n  .scores-container {\n    text-align: right;\n  }\n}\n\n",".grid {\n  position: absolute;\n  z-index: 1;\n}\n","@import \"../../base.scss\";\n\n.grid-cell {\n  width: $tile-size;\n  height: $tile-size;\n  margin-right: $grid-spacing;\n  float: left;\n\n  border-radius: $tile-border-radius;\n\n  background: $cell-background;\n\n  &:last-child {\n    margin-right: 0;\n  }\n}\n","$field-width: 500px;\n$grid-spacing: 15px;\n$grid-row-cells: 4;\n$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;\n$tile-border-radius: 3px;\n\n$mobile-threshold: $field-width + 20px;\n\n$text-color: #776E65;\n$bright-text-color: #f9f6f2;\n\n$tile-color: #eee4da;\n$tile-gold-color: #edc22e;\n$tile-gold-glow-color: lighten($tile-gold-color, 15%);\n\n$game-container-margin-top: 40px;\n$game-container-background: black;\n$cell-background: white;\n$transition-speed: 100ms;\n","@import \"../../base.scss\";\n\n.grid-row {\n  margin-bottom: $grid-spacing;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n}\n","@import \"../../base.scss\";\n\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $i from 1 through $exponent {\n      $value: $value * $number;\n    }\n  }\n\n  @return $value;\n}\n\n@mixin tile-positions {\n  @for $x from 1 through $grid-row-cells {\n    @for $y from 1 through $grid-row-cells {\n      .tile-position-#{$x}-#{$y} {\n        $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));\n        $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));\n        transform: translate($xPos, $yPos);\n      }\n    }\n  }\n}\n\n@mixin tile-colors {\n  $colors: gainsboro, lightgray, silver, darkgray, gray, dimgray, lightslategray, slategray, darkslategray, #343434, black;\n\n  @for $i from 1 through length($colors) {\n    .tile-#{pow(2, $i)} {\n      .tile-content {\n        background: nth($colors, $i);\n      }\n    }\n  }\n}\n\n@include tile-positions;\n@include tile-colors;\n\n.tile {\n  position: absolute;\n  width: ceil($tile-size);\n  height: ceil($tile-size);\n  line-height: ceil($tile-size);\n}\n\n.tile-content {\n  width: ceil($tile-size);\n  height: ceil($tile-size);\n  line-height: ceil($tile-size);\n  border-radius: $tile-border-radius;\n\n  color: white;\n  text-shadow: 2px 2px 0.5px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  font-weight: bold;\n\n  z-index: 10;\n  font-size: 3em;\n}\n",".tile-container {\n  position: absolute;\n  z-index: 2;\n}\n","@import \"./base.scss\";\n\n.game-container {\n  margin-top: $game-container-margin-top;\n  position: relative;\n  padding: $grid-spacing;\n\n  cursor: default;\n  user-select: none;\n  touch-action: none;\n\n  background: $game-container-background;\n  border-radius: $tile-border-radius * 2;\n  width: $field-width;\n  height: $field-width;\n  box-sizing: border-box;\n}\n","$card-width: 180px;\n\n.flipcard {\n  position: relative;\n  display: inline-block;\n  width: $card-width;\n  height: $card-width * 1.5;\n  margin: 1em 2em;\n\n  .flipcard-inner {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    border: 5px solid transparent;\n    border-radius: 5px;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2), 0 6px 6px rgba(0, 0, 0, 0.25);\n\n    backface-visibility: hidden;\n    transition: transform 0.6s;\n    transform-style: preserve-3d;\n  }\n\n  .front {\n    // By default we rotate the front so as the backface is facing the viewer in a 3D space\n    // combined with `backface-visibility: hidden;` hides the front.\n    transform: rotateY(-180deg);\n    display: flex;\n    justify-content: center;\n\n    img{\n      width: 70%;\n    }\n  }\n\n  .back {\n    // Visible by default\n    border-color: white;\n    background-color: black;\n  }\n\n  &.flipped {\n    // Clockwise rotations to flip visibilities\n    .back {\n      transform: rotateY(180deg);\n    }\n\n    .front {\n      transform: rotateY(0deg);\n    }\n  }\n\n  &.found {\n    opacity: 0.5;\n  }\n}\n","$loader-size: 50px;\n$loader-color: black;\n$loader-width: 4px;\n\n\n.loader-container {\n  display: flex;\n  flex-direction: column;\n\n  .loader {\n    width: $loader-size;\n    height: $loader-size;\n    display: inline-block;\n    margin: 50px auto;\n    vertical-align: middle;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: -6px;\n      left: -6px;\n      bottom: -6px;\n      right: -6px;\n      border-radius: 50%;\n      border: $loader-width solid transparent;\n      border-top-color: $loader-color;\n      animation: spin 1s linear infinite;\n    }\n  }\n\n  .message {\n    margin: 0 auto;\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg)\n  }\n  100% {\n    transform: rotate(360deg)\n  }\n}\n"]}